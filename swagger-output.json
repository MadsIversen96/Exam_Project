{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Login page"
        ],
        "summary": "Front end for login page",
        "description": "",
        "produces": [
          "json"
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users and Roles"
        ],
        "summary": "View all Users",
        "description": "",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view users"
          }
        }
      }
    },
    "/users/{userId}": {
      "put": {
        "tags": [
          "Users and Roles"
        ],
        "summary": "Updates a user by userID",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: User updated successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "404": {
            "description": "Not Found: User not found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to update user"
          }
        }
      }
    },
    "/init/": {
      "post": {
        "tags": [
          "Database Initiation"
        ],
        "summary": "Fills the database with all required data",
        "description": "",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK: Database populated successfully"
          },
          "400": {
            "description": "Bad Request: Database already has data"
          },
          "500": {
            "description": "Internal Server Error: Error when trying to populate database"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "description": "",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: You created an account"
          },
          "400": {
            "description": "Bad Request: Invalid or missing credentials"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while registering the user"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "NOTE: After logging in as admin you get a cookie token and will be able to use the other endpoints",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: You are logged in"
          },
          "401": {
            "description": "Bad Request: Incorrect email or password"
          },
          "500": {
            "description": "Internal Server Error: Something went wrong with creating JWT token"
          }
        }
      }
    },
    "/admin/products": {
      "get": {
        "tags": [
          "Admin Panel"
        ],
        "summary": "Fetches data for products page",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: Error fetching data for products page"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "Admin Panel"
        ],
        "summary": "Fetches data for categories page",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: Error fetching data for categories page"
          }
        }
      }
    },
    "/admin/brands": {
      "get": {
        "tags": [
          "Admin Panel"
        ],
        "summary": "Fetches data for brands page",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: Error fetching data for brands page"
          }
        }
      }
    },
    "/admin/roles": {
      "get": {
        "tags": [
          "Admin Panel"
        ],
        "summary": "Fetches data for roles page",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: Error fetching data for roles page"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin Panel"
        ],
        "summary": "Fetches data for users page",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: Error fetching data for users page"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "tags": [
          "Admin Panel"
        ],
        "summary": "Fetches data for orders page",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: Error fetching data for orders page"
          }
        }
      }
    },
    "/brands/": {
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "View all brands",
        "description": "",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view brands"
          }
        }
      },
      "post": {
        "tags": [
          "Brands"
        ],
        "summary": "Adds a new brand.",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Brand created successfully"
          },
          "400": {
            "description": "Bad Request:Invalid or missing properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to add brand"
          }
        }
      }
    },
    "/brands/{id}": {
      "put": {
        "tags": [
          "Brands"
        ],
        "summary": "Updates a brand by ID",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Brand updated successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to update brand"
          }
        }
      },
      "delete": {
        "tags": [
          "Brands"
        ],
        "summary": "Deletes a brand by ID",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Brand deleted successfully"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict: You are trying to delete a brand thats in use"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to delete brand"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "View all categories",
        "description": "",
        "responses": {
          "200": {
            "description": "OK: Successful operation"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view category"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add a new category",
        "description": "You need to execute /auth/login as admin first",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Category added successfully",
            "schema": {
              "$ref": "#/definitions/CategoryResponse"
            }
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admin have access"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to add category"
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update a category by ID",
        "description": "You need to execute /auth/login as admin first",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Category updated successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admin have access"
          },
          "404": {
            "description": "Not Found: Category not found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to update category"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category by ID",
        "description": "You need to execute /auth/login as admin first",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Category deleted successfully"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admin have access"
          },
          "404": {
            "description": "Not Found: Category not found"
          },
          "409": {
            "description": "Conflict: Cannot delete a category that is in use"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to delete category"
          }
        }
      }
    },
    "/carts/": {
      "get": {
        "tags": [
          "Users Cart"
        ],
        "summary": "View the users cart",
        "description": "You need to execute /auth/login as a regular USER first. You can use the user created when executing /auth/register.",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found: No products found in Cart"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view cart"
          }
        }
      }
    },
    "/carts/{productId}": {
      "post": {
        "tags": [
          "Users Cart"
        ],
        "summary": "Add an item to users cart",
        "description": "You need to execute /auth/login as a regular USER first. You can use the user created when executing /auth/register.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCartitem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created: Product added to cart"
          },
          "400": {
            "description": "Bad Request: Invalid properties or values"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "404": {
            "description": "Not found: Product you try to add was not found"
          },
          "500": {
            "description": "Internal Server Error: Error occurred while trying to add item to cart"
          }
        }
      },
      "put": {
        "tags": [
          "Users Cart"
        ],
        "summary": "Update quantity of item in users cart",
        "description": "You need to execute /auth/login as a regular USER first. You can use the user created when executing /auth/register.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCartitem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Product quantity updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "404": {
            "description": "Not Found: Product or cart not found"
          },
          "500": {
            "description": "Internal Server Error: Error occurred while trying to update quantity of item"
          }
        }
      },
      "delete": {
        "tags": [
          "Users Cart"
        ],
        "summary": "Delete item in users cart",
        "description": "You need to execute /auth/login as a regular USER first. You can use the user created when executing /auth/register.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Product deleted successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "404": {
            "description": "Not Found: Product you try to delete was not found"
          },
          "500": {
            "description": "Internal Server Error: Error occurred while trying to update quantity of item"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Checkout and Orders"
        ],
        "summary": "View all orders of all users",
        "description": "",
        "responses": {
          "200": {
            "description": "OK: Successful operation"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view orders"
          }
        }
      }
    },
    "/orders/statuses": {
      "get": {
        "tags": [
          "Checkout and Orders"
        ],
        "summary": "View status alternatives",
        "description": "",
        "responses": {
          "200": {
            "description": "OK: Successful operation"
          },
          "404": {
            "description": "Not Found: No statuses found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view statuses"
          }
        }
      }
    },
    "/orders/{orderId}": {
      "put": {
        "tags": [
          "Checkout and Orders"
        ],
        "summary": "Change order statuses by orderId",
        "description": "You need to execute /auth/login as admin first",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOrderStatus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created: Status updated successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admin have access"
          },
          "404": {
            "description": "Not Found: Order or Status not found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to update order status"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "View all the products in the database",
        "description": "",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found: No products found"
          },
          "500": {
            "description": "Internal Server Error: Error when getting products"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Adds a new product.",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Product created successfully"
          },
          "400": {
            "description": "Bad request: Invalid or missing properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to add product"
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product by ID",
        "description": "You need to execute /auth/login as admin first",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Product updated successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to update product"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product by ID",
        "description": "NOTE: This is a soft delete. <br><br/> <br> You need to execute /auth/login as admin first <br/>",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Product deleted successfully"
          },
          "400": {
            "description": "Bad Request: Product is already deleted"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "403": {
            "description": "Unauthorized: Only admins have access"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to update product"
          }
        }
      }
    },
    "/search/": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Search through all the products in the database",
        "description": "",
        "produces": [
          "json"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "brand",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "searchTerm": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error: Error when searching products"
          }
        }
      }
    },
    "/checkout/": {
      "get": {
        "tags": [
          "Checkout and Orders"
        ],
        "summary": "View your users own order",
        "description": "You need to execute /auth/login as a regular USER first. You can use the user created when executing /auth/register.<br><br/> <br> Add product to users cart to get successfull result <br/>",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found: No order found"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to view order"
          }
        }
      }
    },
    "/checkout/now": {
      "post": {
        "tags": [
          "Checkout and Orders"
        ],
        "summary": "Checks out users cart",
        "description": "You need to execute /auth/login as a regular USER first. You can use the user created when executing /auth/register. <br><br/> <br> Add product to users cart to get successfull result <br/>",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created: Order created successfully"
          },
          "400": {
            "description": "Bad Request: Invalid properties or values"
          },
          "401": {
            "description": "Unauthorized: No token provided or invalid token"
          },
          "404": {
            "description": "Not found: No products found in cart or membership not found"
          },
          "500": {
            "description": "Internal Server Error: Error occurred while trying to check out cart"
          }
        }
      }
    },
    "/roles/": {
      "get": {
        "tags": [
          "Users and Roles"
        ],
        "summary": "Get all Role alternatives",
        "description": "",
        "produces": [
          "json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error: An error occurred while trying to get roles"
          }
        }
      }
    }
  },
  "definitions": {
    "UserRegister": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "username": {
          "type": "string",
          "example": "JohnDoe90"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "abcd1234"
        },
        "address": {
          "type": "string",
          "example": "Main Street 10"
        },
        "telephone": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "emailOrUsername": {
          "type": "string",
          "example": "admin"
        },
        "password": {
          "type": "string",
          "example": "P@ssword2023"
        }
      }
    },
    "PostProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "iPhone 2030 Model"
        },
        "imgurl": {
          "type": "string",
          "example": "example-url.png"
        },
        "description": {
          "type": "string",
          "example": "Do all on your phone"
        },
        "price": {
          "type": "number",
          "example": 11999
        },
        "quantity": {
          "type": "number",
          "example": 40
        },
        "brandId": {
          "type": "number",
          "example": 1
        },
        "categoryId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "name",
        "imgurl",
        "description",
        "price",
        "quantity",
        "brandId",
        "categoryId"
      ]
    },
    "UpdateProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "newiPhoneName"
        },
        "description": {
          "type": "string",
          "example": "This iPhone have a new name and price"
        },
        "price": {
          "type": "number",
          "example": 9999
        }
      }
    },
    "PostBrand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "New brand"
        }
      }
    },
    "Updatebrand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Updated brandName"
        }
      }
    },
    "PostCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "New category"
        }
      }
    },
    "UpdateCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Updated category"
        }
      }
    },
    "PostCartitem": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "number",
          "example": 10
        }
      }
    },
    "UpdateCartitem": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "number",
          "example": 15
        }
      }
    },
    "UpdateOrderStatus": {
      "type": "object",
      "properties": {
        "statusName": {
          "type": "string",
          "example": "Completed"
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "example": "Second Street 30"
        },
        "telephone": {
          "type": "string",
          "example": "90909090"
        }
      }
    }
  }
}